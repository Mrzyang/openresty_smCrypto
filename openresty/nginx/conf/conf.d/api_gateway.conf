# API网关配置文件

# 上游后端服务
upstream backend_services {
    server 127.0.0.1:3000;
    keepalive 32;
}

# 置Lua包路径
lua_package_path "/opt/zy/software/openresty/lualib/?.lua;/opt/zy/software/openresty/lualib/resty/?.lua;/opt/zy/software/openresty/nginx/lua/?.lua;/opt/zy/software/openresty/nginx/lua/api_gateway/?.lua;/opt/zy/software/openresty/nginx/lua/lib/lua/?.lua;;";
lua_package_cpath "/opt/zy/software/openresty/lualib/?.so;/opt/zy/software/openresty/nginx/lua/lib/so/?.so;;";

# 设置共享字典
lua_shared_dict nonce_cache 10m;
lua_shared_dict rate_limit 10m;
lua_shared_dict app_config_cache 10m;

# 主API网关服务
server {
    listen 8082;
    server_name api-gateway.local;
        
    # 健康检查接口
    location /health {
        access_log off;
        content_by_lua_block {
            local gateway = require "api_gateway.gateway"
            gateway.health_check()
        }
    }
    
    # 管理接口
    location /admin/app {
        access_log off;
        content_by_lua_block {
            local gateway = require "api_gateway.gateway"
            gateway.get_app_info()
        }
    }
    
    location /admin/api {
        access_log off;
        content_by_lua_block {
            local gateway = require "api_gateway.gateway"
            gateway.get_api_info()
        }
    }
    
    location /admin/subscriptions {
        access_log off;
        content_by_lua_block {
            local gateway = require "api_gateway.gateway"
            gateway.get_app_subscriptions()
        }
    }
    
    # API网关主入口
    location /api/ {
        # 设置请求体大小限制
        client_max_body_size 10m;
        
        # 主处理逻辑
        content_by_lua_block {
            local gateway = require "api_gateway.gateway"
            gateway.handle_request()
        }
        
        # 错误处理
        error_page 400 401 403 404 408 409 500 502 503 504 /error;
    }

    # 错误页面
    location = /error {
        internal;
        content_by_lua_block {
            local status = ngx.status
            local error_msg = "Internal Server Error"
            
            if status == 400 then
                error_msg = "Bad Request"
            elseif status == 401 then
                error_msg = "Unauthorized"
            elseif status == 403 then
                error_msg = "Forbidden"
            elseif status == 404 then
                error_msg = "Not Found"
            elseif status == 408 then
                error_msg = "Request Timeout"
            elseif status == 409 then
                error_msg = "Conflict"
            elseif status == 500 then
                error_msg = "Internal Server Error"
            elseif status == 502 then
                error_msg = "Bad Gateway"
            elseif status == 503 then
                error_msg = "Service Unavailable"
            elseif status == 504 then
                error_msg = "Gateway Timeout"
            end
            
            ngx.header.content_type = "application/json; charset=utf-8"
            ngx.say('{"code":' .. status .. ',"message":"' .. error_msg .. '","timestamp":' .. ngx.time() .. '}')
        }
    }
    
    # 静态文件服务（可选）
    location /static/ {
        alias ./nginx/html/static/;
        expires 1d;
        add_header Cache-Control "public, immutable";
    }
}

# 日志格式
log_format api_gateway '$remote_addr - $remote_user [$time_local] '
                      '"$request" $status $body_bytes_sent '
                      '"$http_referer" "$http_user_agent" '
                      'rt=$request_time uct="$upstream_connect_time" '
                      'uht="$upstream_header_time" urt="$upstream_response_time" '
                      'appid="$http_x_app_id" nonce="$http_x_nonce"';

# 访问日志
access_log /opt/zy/software/openresty/nginx/logs/api_gateway_access.log api_gateway;
error_log /opt/zy/software/openresty/nginx/logs/api_gateway_error.log debug;